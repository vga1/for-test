version: '3.8'

services:
  php-web:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php-web
    volumes:
      - ./php/index.php:/var/www/html/index.php
      - ./php/db.php:/var/www/html/db.php # Додайте цей рядок
    expose:
      - "9000" # Експонуємо порт 9000 для PHP-FPM

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./php/:/var/www/html # Додаємо volume для доступу до PHP файлів
      - ./certs/:/etc/nginx/certs/ # Додаємо volume для сертифікатів
    ports:
      - "8080:80" # Проксі через Nginx на локальному порту 8080
      - "443:443"  # Відкриваємо порт 443 для HTTPS
    depends_on:
      - php-web

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: my_database # Додайте цю рядок для створення бази даних
    volumes:
      - ./db_data:/var/lib/mysql # Зберігання даних
    ports:
      - "3306:3306" # Експонування порту MySQL

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: db # Вказуємо ім'я хоста MySQL (контейнер db)
      MYSQL_ROOT_PASSWORD: root_password # Той же пароль, що і в контейнері db
    ports:
      - "8081:80" # Доступ до phpMyAdmin через порт 8081
    depends_on:
      - db
  
  react-app:
    build:
      context: ./react-app
      dockerfile: Dockerfile
    container_name: react-app
    ports:
      - "3000:3000" # Експонуємо порт 3000 для доступу до React
    volumes:
      - ./react-app/app:/app # Для розробки, дозволяє автооновлення при зміні коду
    depends_on:
      - nginx